// Code generated by mockery v2.6.0. DO NOT EDIT.

package mocks

import (
	usr "github.com/andrii-minchekov/lets-go/domain/user"
	mock "github.com/stretchr/testify/mock"
)

// UserRepository is an autogenerated mock type for the UserRepository type
type UserRepository struct {
	mock.Mock
}

// CreateUser provides a mock function with given fields: user
func (_m *UserRepository) CreateUser(user usr.User) (int64, error) {
	ret := _m.Called(user)

	var r0 int64
	if rf, ok := ret.Get(0).(func(usr.User) int64); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(usr.User) error); ok {
		r1 = rf(user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetUserByEmail provides a mock function with given fields: email
func (_m *UserRepository) GetUserByEmail(email string) (*usr.User, error) {
	ret := _m.Called(email)

	var r0 *usr.User
	if rf, ok := ret.Get(0).(func(string) *usr.User); ok {
		r0 = rf(email)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*usr.User)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
