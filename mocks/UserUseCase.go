// Code generated by mockery v2.6.0. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"

	usr "github.com/andrii-minchekov/lets-go/domain/user"
)

// UserUseCase is an autogenerated mock type for the UserUseCase type
type UserUseCase struct {
	mock.Mock
}

// SignInUser provides a mock function with given fields: email, password
func (_m *UserUseCase) SignInUser(email string, password string) (int64, error) {
	ret := _m.Called(email, password)

	var r0 int64
	if rf, ok := ret.Get(0).(func(string, string) int64); ok {
		r0 = rf(email, password)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(string, string) error); ok {
		r1 = rf(email, password)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SignupUser provides a mock function with given fields: user
func (_m *UserUseCase) SignupUser(user usr.User) (int64, error) {
	ret := _m.Called(user)

	var r0 int64
	if rf, ok := ret.Get(0).(func(usr.User) int64); ok {
		r0 = rf(user)
	} else {
		r0 = ret.Get(0).(int64)
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(usr.User) error); ok {
		r1 = rf(user)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
